class MyStack {
public:
    queue<int> q1;
    MyStack() {
        
    }
    
    void push(int x) {
        q1.push(x);
    }
    
    int pop() {
        queue<int> q2;
        int last;
        while(!q1.empty())
        {
            int x = q1.front();
            q1.pop();
            if(q1.empty())
            {
                last = x;
                break;
            }
            q2.push(x);
        }
        q1 = q2;
        return last;
    }
    
    int top() {
        queue<int> q2;
        int last;
        while(!q1.empty())
        {
            int x = q1.front();
            q1.pop();
            if(q1.empty())
            {
                last = x;
            }
            q2.push(x);
        }
        q1 = q2;
        return last;
    }
    
    bool empty() {
        if(!q1.empty()) return false;
        else return true;
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
