class Solution {
public:
    vector<int> v[200005];
    bool vis[200005];
    bool ans = false;
    void dfs(int src, int d)
    {
        vis[src] = true;
        if(v[d]==v[src])
        {
            ans = true;
        }
        for(auto child:v[src])
        {

            if(!vis[child])
            {
                dfs(child,d);
            }
        }
    }
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        memset(vis,false,sizeof(vis));
        for(int i=0;i<edges.size();i++)
        {
            int a = edges[i][0];
            int b = edges[i][1];

            v[a].push_back(b);
            v[b].push_back(a);
        }

        dfs(source,destination);

        return ans;
    }
};
