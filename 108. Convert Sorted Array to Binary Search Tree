/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *convert(vector<int> &arr, int n, int l, int r)
    {
        if(l>r) return NULL;
        int mid = (l+r)/2;

        TreeNode *root = new TreeNode(arr[mid]);

        TreeNode *nodeleft = convert(arr,n,l,mid-1);
        TreeNode *noderight = convert(arr,n,mid+1,r);

        root->left = nodeleft;
        root->right = noderight;

        return root;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int l = 0;
        int r = nums.size()-1;

        int sz = nums.size();

        TreeNode *res = convert(nums,sz,l,r);
        return res;
    }
};
